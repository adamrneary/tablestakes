// Generated by CoffeeScript 1.4.0

describe("Events", function() {
  var $, browser, event, window;
  $ = null;
  window = null;
  browser = null;
  event = null;
  before(function(done) {
    return glob.zombie.visit(glob.url + "#base", function(e, _browser) {
      browser = _browser;
      window = browser.window;
      $ = window.$;
      event = window.TableStakesLib.Events;
      return done();
    });
  });
  it('window.TableStakesLib.Events is function', function(done) {
    assert(typeof window.TableStakesLib.Events === 'function');
    assert(window.TableStakesLib.Events);
    return done();
  });
  return it('events constructor', function(done) {
    assert(event);
    return done();
  });
});

describe('unit tests', function() {
  require('./tablestakes_test');
  return require('./events_test');
});

describe("Tablestakes API ", function() {
  var $, browser, table, window;
  $ = null;
  window = null;
  browser = null;
  table = null;
  before(function(done) {
    return glob.zombie.visit(glob.url + "#base", function(e, _browser) {
      browser = _browser;
      window = browser.window;
      $ = window.$;
      table = new window.TableStakes;
      return done();
    });
  });
  it('window.tablestakes is function', function(done) {
    assert(window.TableStakes);
    assert(typeof window.TableStakes === 'function');
    return done();
  });
  it('constructor', function(done) {
    assert(table);
    return done();
  });
  it('table options', function(done) {
    typeof table.filterCondition === 'object';
    table.filterCondition === 'd3_Map';
    typeof table.core === 'object';
    table.core === 'core';
    typeof table.events === 'object';
    table.events === 'events';
    typeof table.utils === 'object';
    table.utils === 'utils';
    return done();
  });
  it('render', function(done) {
    assert(typeof table.render === 'function');
    assert(table.render);
    return done();
  });
  it('update', function(done) {
    assert(typeof table.update === 'function');
    assert(table.update);
    return done();
  });
  it('dispatchManualEvent', function(done) {
    assert(typeof table.dispatchManualEvent === 'function');
    assert(table.dispatchManualEvent);
    return done();
  });
  return it('setID', function(done) {
    assert(typeof table.setID === 'function');
    assert(table.setID);
    return done();
  });
});
