// Generated by CoffeeScript 1.4.0
var Performance, tests;

tests = [
  {
    name: 'testInit',
    rows: 36,
    columns: 12
  }, {
    name: 'testUpdate',
    rows: 72,
    columns: 24
  }
];

Performance = (function() {

  Performance.prototype.template = _.template('<div class="container">\n  <hr />\n  <div id="results">\n    \n  </div>\n  <div id="example"></div>\n</div>');

  function Performance(options) {
    this.el = options.el;
    this.tests = options.tests;
    this.render();
    this.runTest();
  }

  Performance.prototype.render = function() {
    return this.el.html(this.template());
  };

  Performance.prototype.runTest = function(counter) {
    var _this = this;
    if (counter == null) {
      counter = 0;
    }
    return setTimeout(function() {
      var start;
      start = Date.now();
      _this[_this.tests[counter].name](_this.tests[counter]);
      return setTimeout(function() {
        var end;
        end = Date.now();
        _this.showResult(end - start, _this.tests[counter]);
        counter++;
        if (_this.tests[counter]) {
          return _this.runTest(counter);
        } else {
          return $(_this.el).find('#example').hide();
        }
      }, 0);
    }, 0);
  };

  Performance.prototype.generateData = function(rows, columns) {
    var c, column, data, obj, p, _i, _j, _k, _len, _ref;
    data = {
      columns: [],
      data: []
    };
    for (c = _i = 1; 1 <= columns ? _i <= columns : _i >= columns; c = 1 <= columns ? ++_i : --_i) {
      column = 'p' + c;
      data.columns.push({
        id: column,
        label: column
      });
    }
    for (p = _j = 1; 1 <= rows ? _j <= rows : _j >= rows; p = 1 <= rows ? ++_j : --_j) {
      obj = {};
      _ref = data.columns;
      for (_k = 0, _len = _ref.length; _k < _len; _k++) {
        column = _ref[_k];
        obj[column.id] = p;
      }
      data.data.push(obj);
    }
    return data;
  };

  Performance.prototype.showResult = function(time, test) {
    var html, p;
    html = '<div>';
    for (p in test) {
      html += "<b>" + p + "</b>: " + test[p];
      html += '<br />';
    }
    html += "<strong>time</strong>: " + time + "ms";
    html += "<hr />";
    html += "</div>";
    return $(this.el).find('#results').append(html);
  };

  Performance.prototype.testInit = function(options) {
    var data;
    data = this.generateData(options.rows, options.columns);
    return this.table = new window.TableStakes().el("#example").columns(data.columns).data(data.data).render();
  };

  Performance.prototype.testUpdate = function(options) {
    var data;
    data = this.generateData(options.rows, options.columns);
    return this.table.columns(data.columns).data(data.data).render();
  };

  return Performance;

})();

$(document).ready(function() {
  var perf;
  return perf = new Performance({
    el: $('<div id="performance" />').appendTo('body'),
    tests: tests
  });
});
